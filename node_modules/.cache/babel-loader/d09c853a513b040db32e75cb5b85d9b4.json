{"ast":null,"code":"var _jsxFileName = \"F:\\\\information-Management-master\\\\src\\\\Copoments\\\\Pages\\\\firebaseTest.jsx\";\nimport React, { Component } from 'react';\nimport firebase from '../../firebase SDK/firebase';\n\nclass FirebaseTest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({\n          image\n        }));\n      }\n    };\n\n    this.handleUpload = () => {\n      console.log(this.state.image);\n      const {\n        image\n      } = this.state;\n      const uploadTask = firebase.storage().ref().child('images/' + image.name).put(image); // here code start of retrieving the image\n\n      uploadTask.on(\"state_changed\", snapshot => {\n        // progress function ...\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        this.setState({\n          progress\n        });\n      }, error => {\n        // Error function ...\n        console.log(error);\n      }, () => {\n        // complete function ...\n        firebase.storage().ref(\"images/\").child(image.name).getDownloadURL().then(url => {\n          this.setState({\n            url\n          });\n        });\n      });\n    };\n\n    this.writeData = () => {\n      const data = firebase.database().ref('users/').push(this.state);\n      console.log('Data saved', data);\n    };\n\n    this.readData = () => {\n      const newData = firebase.database().ref('users/');\n      newData.on('value', snapshot => {\n        let items = [];\n        snapshot.forEach(child => {\n          items.push({\n            City_Name: child.val().email,\n            Name_value: child.val().password //    Email_value:child.val().Email,\n            //    profile_img:child.val().url,\n            //    total_item:child.val().Totaldonation\n\n          });\n        });\n        this.setState({\n          data: items\n        });\n        console.log(this.state.data);\n      });\n    };\n\n    this.displayData = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, this.state.data.map((item, index) => /*#__PURE__*/React.createElement(\"p\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, item.City_Name, item.Name_value)));\n    };\n\n    this.state = {\n      email: 'varshangshrimali@yahoo.com',\n      password: '324567',\n      data: [],\n      image: null,\n      url: '',\n      progress: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  componentDidMount() {\n    // this.writeData();\n    this.readData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"Setting a database\"), this.displayData(), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"progress\", {\n      value: this.state.progress,\n      max: \"100\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 14\n      }\n    }, \"upload\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.url || 'https://via.placeholder.com/400x300',\n      alt: \"Uploaded Image\",\n      height: \"300\",\n      width: \"400\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 14\n      }\n    })));\n  }\n\n}\n\nexport default FirebaseTest;","map":{"version":3,"sources":["F:/information-Management-master/src/Copoments/Pages/firebaseTest.jsx"],"names":["React","Component","firebase","FirebaseTest","constructor","props","handleChange","e","target","files","image","setState","handleUpload","console","log","state","uploadTask","storage","ref","child","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","getDownloadURL","then","url","writeData","data","database","push","readData","newData","items","forEach","City_Name","val","email","Name_value","password","displayData","map","item","index","bind","componentDidMount","render","textAlign"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\nimport firebase from '../../firebase SDK/firebase';\nclass FirebaseTest extends Component{\n    constructor(props){\n        super(props);\n           this.state={\n                email:'varshangshrimali@yahoo.com',\n                password:'324567',\n                data:[],\n                image:null,\n                url:'',\n                progress:0\n              }\n        this.handleChange=this.handleChange.bind(this);\n        this.handleUpload=this.handleUpload.bind(this);\n    }\n   \n handleChange = e =>{\n    if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({ image }));\n      }\n }\n handleUpload =()=>{\n    console.log(this.state.image);\n    const {image} = this.state;\n    const uploadTask = firebase.storage().ref().child('images/'+image.name).put(image);\n// here code start of retrieving the image\nuploadTask.on(\n    \"state_changed\",\n    snapshot => {\n      // progress function ...\n      const progress = Math.round(\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n      );\n      this.setState({ progress });\n    },\n    error => {\n      // Error function ...\n      console.log(error);\n    },\n    () => {\n      // complete function ...\n     firebase.storage()\n        .ref(\"images/\")\n        .child(image.name)\n        .getDownloadURL()\n        .then(url => {\n          this.setState({ url });\n        });\n    }\n  );\n }\n    writeData=()=>{\n      const data = firebase.database().ref('users/').push(this.state);\n        console.log('Data saved',data);\n    }\n    readData=()=>{\n        const newData = firebase.database().ref('users/');\n        newData.on('value',(snapshot)=>{\n            let items =[];\n            snapshot.forEach((child)=>{\n              items.push({\n                City_Name:child.val().email,\n                Name_value: child.val().password,\n            //    Email_value:child.val().Email,\n            //    profile_img:child.val().url,\n            //    total_item:child.val().Totaldonation\n              });\n            });\n            this.setState({ data:items});\n            console.log(this.state.data);      \n        })\n    }\n    displayData =()=>{\n        return (<div>\n            {this.state.data.map((item, index) => (\n                <p key={index}>{item.City_Name}\n                {item.Name_value}\n                </p>\n            ))}\n            </div>);\n    }\n    componentDidMount(){\n        // this.writeData();\n        this.readData();\n    }\n    render(){\n        return (\n            <div >\n                <h1>Setting a database</h1>\n             {this.displayData()}\n            <div style={{textAlign:'center'}}>\n            <progress value={this.state.progress} max=\"100\" />\n            <br/>\n             <input type=\"file\" onChange={this.handleChange}/>\n             <button onClick={this.handleUpload}>upload</button>\n             <br />\n             <img src={this.state.url || 'https://via.placeholder.com/400x300'} alt=\"Uploaded Image\" height=\"300\" width=\"400\"/>\n             </div>\n            </div>\n        )\n    }\n   \n}\n\nexport default FirebaseTest;\n"]},"metadata":{},"sourceType":"module"}