{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\information\\\\src\\\\Copoments\\\\Pages\\\\firebaseTest.jsx\";\nimport React, { Component } from 'react';\nimport firebase from '../../firebase SDK/firebase';\n\nclass FirebaseTest extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      if (e.target.files[0]) {\n        const image = e.target.files[0];\n        this.setState(() => ({\n          image\n        }));\n      }\n    };\n\n    this.handleUpload = () => {\n      console.log(this.state.image);\n      const {\n        image\n      } = this.state;\n      const uploadTask = firebase.storage().ref(`images/${image.name}`).put(image); // here code start of retrieving the image\n\n      uploadTask.on(\"state_changed\", snapshot => {\n        // progress function ...\n        const progress = Math.round(snapshot.bytesTransferred / snapshot.totalBytes * 100);\n        this.setState({\n          progress\n        });\n      }, error => {\n        // Error function ...\n        console.log(error);\n      }, () => {\n        // complete function ...\n        storage.ref(\"images\").child(image.name).getDownloadURL().then(url => {\n          this.setState({\n            url\n          });\n        });\n      });\n    };\n\n    this.writeData = () => {\n      const data = firebase.database().ref('users/').push(this.state);\n      console.log('Data saved', data);\n    };\n\n    this.readData = () => {\n      const newData = firebase.database().ref('users/');\n      newData.on('value', snapshot => {\n        let items = [];\n        snapshot.forEach(child => {\n          items.push({\n            City_Name: child.val().email,\n            Name_value: child.val().password //    Email_value:child.val().Email,\n            //    profile_img:child.val().url,\n            //    total_item:child.val().Totaldonation\n\n          });\n        });\n        this.setState({\n          data: items\n        });\n        console.log(this.state.data);\n      });\n    };\n\n    this.displayData = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }\n      }, this.state.data.map((item, index) => /*#__PURE__*/React.createElement(\"p\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }\n      }, item.City_Name, item.Name_value)));\n    };\n\n    this.state = {\n      email: 'varshangshrimali@yahoo.com',\n      password: '324567',\n      data: [],\n      image: null,\n      url: '',\n      progress: 0\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.handleUpload = this.handleUpload.bind(this);\n  }\n\n  componentDidMount() {\n    // this.writeData();\n    this.readData();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, \"Setting a database\"), this.displayData(), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleUpload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 14\n      }\n    }, \"upload\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 14\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: this.state.url || 'https://via.placeholder.com/400x300',\n      alt: \"Uploaded Image\",\n      height: \"300\",\n      width: \"400\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 14\n      }\n    })));\n  }\n\n}\n\nexport default FirebaseTest;","map":{"version":3,"sources":["D:/projects/information/src/Copoments/Pages/firebaseTest.jsx"],"names":["React","Component","firebase","FirebaseTest","constructor","props","handleChange","e","target","files","image","setState","handleUpload","console","log","state","uploadTask","storage","ref","name","put","on","snapshot","progress","Math","round","bytesTransferred","totalBytes","error","child","getDownloadURL","then","url","writeData","data","database","push","readData","newData","items","forEach","City_Name","val","email","Name_value","password","displayData","map","item","index","bind","componentDidMount","render","textAlign"],"mappings":"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","sourcesContent":["import React,{ Component } from 'react';\r\nimport firebase from '../../firebase SDK/firebase';\r\nclass FirebaseTest extends Component{\r\n    constructor(props){\r\n        super(props);\r\n           this.state={\r\n                email:'varshangshrimali@yahoo.com',\r\n                password:'324567',\r\n                data:[],\r\n                image:null,\r\n                url:'',\r\n                progress:0\r\n              }\r\n        this.handleChange=this.handleChange.bind(this);\r\n        this.handleUpload=this.handleUpload.bind(this);\r\n    }\r\n   \r\n handleChange = e =>{\r\n    if (e.target.files[0]) {\r\n        const image = e.target.files[0];\r\n        this.setState(() => ({ image }));\r\n      }\r\n }\r\n handleUpload =()=>{\r\n    console.log(this.state.image);\r\n    const {image}=this.state;\r\n    const uploadTask = firebase.storage().ref(`images/${image.name}`).put(image);\r\n// here code start of retrieving the image\r\nuploadTask.on(\r\n    \"state_changed\",\r\n    snapshot => {\r\n      // progress function ...\r\n      const progress = Math.round(\r\n        (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n      );\r\n      this.setState({ progress });\r\n    },\r\n    error => {\r\n      // Error function ...\r\n      console.log(error);\r\n    },\r\n    () => {\r\n      // complete function ...\r\n      storage\r\n        .ref(\"images\")\r\n        .child(image.name)\r\n        .getDownloadURL()\r\n        .then(url => {\r\n          this.setState({ url });\r\n        });\r\n    }\r\n  );\r\n }\r\n    writeData=()=>{\r\n      const data = firebase.database().ref('users/').push(this.state);\r\n        console.log('Data saved',data);\r\n    }\r\n    readData=()=>{\r\n        const newData = firebase.database().ref('users/');\r\n        newData.on('value',(snapshot)=>{\r\n            let items =[];\r\n            snapshot.forEach((child)=>{\r\n              items.push({\r\n                City_Name:child.val().email,\r\n                Name_value: child.val().password,\r\n            //    Email_value:child.val().Email,\r\n            //    profile_img:child.val().url,\r\n            //    total_item:child.val().Totaldonation\r\n              });\r\n            });\r\n            this.setState({ data:items});\r\n            console.log(this.state.data);      \r\n        })\r\n    }\r\n    displayData =()=>{\r\n        return (<div>\r\n            {this.state.data.map((item, index) => (\r\n                <p key={index}>{item.City_Name}\r\n                {item.Name_value}\r\n                </p>\r\n            ))}\r\n            </div>);\r\n    }\r\n    componentDidMount(){\r\n        // this.writeData();\r\n        this.readData();\r\n    }\r\n    render(){\r\n        return (\r\n            <div >\r\n                <h1>Setting a database</h1>\r\n             {this.displayData()}\r\n            <div style={{textAlign:'center'}}>\r\n             <input type=\"file\" onChange={this.handleChange}/>\r\n             <button onClick={this.handleUpload}>upload</button>\r\n             <br />\r\n             <img src={this.state.url || 'https://via.placeholder.com/400x300'} alt=\"Uploaded Image\" height=\"300\" width=\"400\"/>\r\n             </div>\r\n            </div>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default FirebaseTest;\r\n"]},"metadata":{},"sourceType":"module"}