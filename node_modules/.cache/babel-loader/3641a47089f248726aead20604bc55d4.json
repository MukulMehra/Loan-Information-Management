{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects\\\\information\\\\src\\\\Copoments\\\\Pages\\\\Payment\\\\CheckoutForm.js\";\nimport React from 'react';\nimport { ElementsConsumer, CardElement } from '@stripe/react-stripe-js';\nimport CardSection from './CardSection';\n\nclass CheckoutForm extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmit = async event => {\n      // We don't want to let default form submission happen here,\n      // which would refresh the page.\n      event.preventDefault();\n      const {\n        stripe,\n        elements\n      } = this.props;\n\n      if (!stripe || !elements) {\n        // Stripe.js has not yet loaded.\n        // Make  sure to disable form submission until Stripe.js has loaded.\n        return;\n      }\n\n      const card = elements.getElement(CardElement);\n      const result = await stripe.createToken(card);\n\n      if (result.error) {\n        // Show error to your customer.\n        console.log(result.error.message);\n      } else {\n        // Send the token to your server.\n        // This function does not exist yet; we will define it in the next step.\n        stripeTokenHandler(result.token);\n\n        async function stripeTokenHandler(token) {\n          const paymentData = {\n            token: token.id,\n            cardElem: card\n          };\n          console.log(paymentData); // Use fetch to send the token ID and any other payment data to your server.\n          // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\n\n          const response = await fetch('https://us-central1-information-management-s-c7f1c.cloudfunctions.net/charge', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: console.log(JSON.stringify(paymentData))\n          }).then(response => {\n            return console.log(response.json());\n          }); // Return and display the result of the charge.\n        }\n      }\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        marginLeft: '4vh'\n      },\n      disabled: !this.props.stripe,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, \"Confirm order\"));\n  }\n\n}\n\nexport default function InjectedCheckoutForm() {\n  return /*#__PURE__*/React.createElement(ElementsConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, ({\n    stripe,\n    elements\n  }) => /*#__PURE__*/React.createElement(CheckoutForm, {\n    stripe: stripe,\n    elements: elements,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }));\n}","map":{"version":3,"sources":["D:/projects/information/src/Copoments/Pages/Payment/CheckoutForm.js"],"names":["React","ElementsConsumer","CardElement","CardSection","CheckoutForm","Component","handleSubmit","event","preventDefault","stripe","elements","props","card","getElement","result","createToken","error","console","log","message","stripeTokenHandler","token","paymentData","id","cardElem","response","fetch","method","headers","body","JSON","stringify","then","json","render","marginLeft","InjectedCheckoutForm"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,gBAAR,EAA0BC,WAA1B,QAA4C,yBAA5C;AAEA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AAAA;AAAA;;AAAA,SACzCC,YADyC,GAC1B,MAAOC,KAAP,IAAiB;AAC9B;AACA;AACAA,MAAAA,KAAK,CAACC,cAAN;AAEA,YAAM;AAACC,QAAAA,MAAD;AAASC,QAAAA;AAAT,UAAqB,KAAKC,KAAhC;;AAEA,UAAI,CAACF,MAAD,IAAW,CAACC,QAAhB,EAA0B;AACxB;AACA;AACA;AACD;;AAED,YAAME,IAAI,GAAGF,QAAQ,CAACG,UAAT,CAAoBX,WAApB,CAAb;AACA,YAAMY,MAAM,GAAG,MAAML,MAAM,CAACM,WAAP,CAAmBH,IAAnB,CAArB;;AAEA,UAAIE,MAAM,CAACE,KAAX,EAAkB;AAChB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACE,KAAP,CAAaG,OAAzB;AACD,OAHD,MAGO;AACL;AACA;AACAC,QAAAA,kBAAkB,CAACN,MAAM,CAACO,KAAR,CAAlB;;AACD,uBAAeD,kBAAf,CAAmCC,KAAnC,EAA0C;AACvC,gBAAMC,WAAW,GAAG;AAClBD,YAAAA,KAAK,EAAEA,KAAK,CAACE,EADK;AAElBC,YAAAA,QAAQ,EAACZ;AAFS,WAApB;AAICK,UAAAA,OAAO,CAACC,GAAR,CAAYI,WAAZ,EALsC,CAMvC;AACA;;AAGE,gBAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAC,8EAAD,EAAiF;AAC3GC,YAAAA,MAAM,EAAE,MADmG;AAE3GC,YAAAA,OAAO,EAAE;AACP,8BAAgB;AADT,aAFkG;AAK3GC,YAAAA,IAAI,EAACZ,OAAO,CAACC,GAAR,CAAYY,IAAI,CAACC,SAAL,CAAeT,WAAf,CAAZ;AALsG,WAAjF,CAAL,CAOpBU,IAPoB,CAOfP,QAAQ,IAAG;AACf,mBAAOR,OAAO,CAACC,GAAR,CAAYO,QAAQ,CAACQ,IAAT,EAAZ,CAAP;AACH,WATsB,CAAvB,CAVqC,CAuBvC;AAED;AAIF;AACF,KAtDwC;AAAA;;AAwDzCC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAM,MAAA,QAAQ,EAAE,KAAK5B,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAQ,MAAA,KAAK,EAAE;AAAC6B,QAAAA,UAAU,EAAC;AAAZ,OAAf;AAAmC,MAAA,QAAQ,EAAE,CAAC,KAAKxB,KAAL,CAAWF,MAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,CADF;AAMD;;AA/DwC;;AAkE3C,eAAe,SAAS2B,oBAAT,GAAgC;AAC7C,sBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC;AAAC3B,IAAAA,MAAD;AAASC,IAAAA;AAAT,GAAD,kBACC,oBAAC,YAAD;AAAe,IAAA,MAAM,EAAED,MAAvB;AAA+B,IAAA,QAAQ,EAAEC,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAOD","sourcesContent":["import React from 'react';\r\nimport {ElementsConsumer, CardElement} from '@stripe/react-stripe-js';\r\n\r\nimport CardSection from './CardSection';\r\n\r\nclass CheckoutForm extends React.Component {\r\n  handleSubmit = async (event) => {\r\n    // We don't want to let default form submission happen here,\r\n    // which would refresh the page.\r\n    event.preventDefault();\r\n\r\n    const {stripe, elements} = this.props\r\n\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make  sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n\r\n    const card = elements.getElement(CardElement);\r\n    const result = await stripe.createToken(card);\r\n\r\n    if (result.error) {\r\n      // Show error to your customer.\r\n      console.log(result.error.message);\r\n    } else {\r\n      // Send the token to your server.\r\n      // This function does not exist yet; we will define it in the next step.\r\n      stripeTokenHandler(result.token);\r\n     async function stripeTokenHandler (token) {\r\n        const paymentData = {\r\n          token: token.id,\r\n          cardElem:card\r\n        };\r\n         console.log(paymentData);\r\n        // Use fetch to send the token ID and any other payment data to your server.\r\n        // https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API/Using_Fetch\r\n      \r\n          \r\n          const response = await fetch('https://us-central1-information-management-s-c7f1c.cloudfunctions.net/charge', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body:console.log(JSON.stringify(paymentData)),\r\n          \r\n          }).then(response =>{\r\n              return console.log(response.json());\r\n          });\r\n      \r\n       \r\n      \r\n        // Return and display the result of the charge.\r\n       \r\n      }\r\n      \r\n      \r\n    \r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <CardSection />\r\n        <button style={{marginLeft:'4vh'}} disabled={!this.props.stripe}>Confirm order</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default function InjectedCheckoutForm() {\r\n  return (\r\n    <ElementsConsumer>\r\n      {({stripe, elements}) => (\r\n        <CheckoutForm  stripe={stripe} elements={elements} />\r\n      )}\r\n    </ElementsConsumer>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}